on: [push]

jobs:
  build-and-deploy:
    env:
      IMAGE_NAME: gcr.io/raeperd/realworld-springboot-kotlin
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - run: ./gradlew build sonarqube --info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          path: build/libs/*.jar

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
          sep-tags: ','
      - id: docker
        run: |
          echo "::echo::on"
          echo "::set-output name=image::${{ env.IMAGE_NAME }}}"
          echo "::set-output name=tags::$(echo ${{ steps.metadata.outputs.tags}} | sed "s#${{ env.IMAGE_NAME }}:##g" )"
      - run: |
          ./gradlew jib \
            -Djib.to.image=${{ steps.docker.output.image }} \
            -Djib.to.tags=${{ steps.docker.output.tags }}